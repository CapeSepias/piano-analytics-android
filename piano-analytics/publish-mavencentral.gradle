apply plugin: 'maven-publish'
apply plugin: 'signing'

def GROUP = 'io.piano'
def ARTIFACT_ID = 'analytics'
def VERSION = '3.1.0'
def DESCRIPTION = 'Piano Analytics Mobile Analytics Solutions for Android'
def URL = 'https://github.com/at-internet/piano-analytics-android'
def SCM_URL = 'scm:git@github.com:at-internet/piano-analytics-android.git'
def LICENCE_NAME = 'The MIT License (MIT)'
def LICENCE_URL = 'https://opensource.org/licenses/MIT'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.source
}

artifacts {
    archives androidSourcesJar
}

publishing {
    publications {
        release(MavenPublication) {
            groupId GROUP
            artifactId ARTIFACT_ID
            version VERSION

            artifact("${project.buildDir}/outputs/aar/${project.getName()}-release.aar")
            artifact androidSourcesJar

            pom {
                name = GROUP
                description = DESCRIPTION
                url = URL
                licenses {
                    license {
                        name = LICENCE_NAME
                        url = LICENCE_URL
                    }
                }
                developers {
                    developer {
                        id = 'piano-analytics'
                        name = 'Piano Analytics'
                        email = 'teamdatacollection@atinternet.com'
                    }
                }
                scm {
                    connection = SCM_URL
                    developerConnection = SCM_URL
                    url = SCM_URL
                }
            }
        }
    }
    repositories {
        maven {
            name = 'sonatype'
            url = version.endsWith('SNAPSHOT') ? 'https://oss.sonatype.org/content/repositories/snapshots/' : 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications
}

nexusStaging {
    packageGroup = GROUP
}